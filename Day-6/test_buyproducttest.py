# Generated by Selenium IDE
# testing buy product screen
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from constants import global_constants
from selenium.webdriver.common import utils 
from webdriver_manager.chrome import ChromeDriverManager
from pathlib import Path


class Test_BuyProduct():
  def setup_method(self):
    self.driver = webdriver.Chrome(ChromeDriverManager().install())
    self.driver.get(global_constants.URL)
    self.driver.maximize_window()

  def teardown_method(self):
    self.driver.quit()

  def visibility_element_located(self, located):
    WebDriverWait(self.driver, 5).until(expected_conditions.visibility_of_element_located((located)))

  def test_buy_product_empty_firstname(self):
    self.visibility_element_located((By.CSS_SELECTOR, "*[data-test=\'username\']"))

    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\'username\']").click()
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\'username\']").send_keys(global_constants.USER_NAME)

    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\'password\']").click()
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\'password\']").send_keys(global_constants.PASSWORD)

    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\'login-button\']").click()
    
    self.visibility_element_located((By.XPATH, "//*[@id=\'inventory_container\']/div"))

    self.driver.find_element(By.ID, 'add-to-cart-sauce-labs-backpack').click()
    self.driver.find_element(By.XPATH, '//*[@id="shopping_cart_container"]/a').click()

    self.visibility_element_located((By.XPATH, '//*[@id="cart_contents_container"]/div/div[1]'))

    self.driver.find_element(By.ID, 'checkout').click()

    self.visibility_element_located((By.XPATH, '//*[@id="checkout_info_container"]/div/form/div[1]'))

    self.driver.find_element(By.ID, 'first-name').send_keys('')
    self.driver.find_element(By.ID, 'continue').click()
    error_message = self.driver.find_element(By.XPATH, '//*[@id="checkout_info_container"]/div/form/div[1]/div[4]/h3')

    self.driver.save_screenshot(filename=f'emty-first-name.png')
    assert error_message.text == 'Error: First Name is required'

  def test_buy_product_empty_lastname(self):
    self.visibility_element_located((By.CSS_SELECTOR, "*[data-test=\'username\']"))

    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\'username\']").click()
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\'username\']").send_keys(global_constants.USER_NAME)

    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\'password\']").click()
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\'password\']").send_keys(global_constants.PASSWORD)

    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\'login-button\']").click()
    
    self.visibility_element_located((By.XPATH, "//*[@id=\'inventory_container\']/div"))

    self.driver.find_element(By.ID, 'add-to-cart-sauce-labs-backpack').click()
    self.driver.find_element(By.XPATH, '//*[@id="shopping_cart_container"]/a').click()

    self.visibility_element_located((By.XPATH, '//*[@id="cart_contents_container"]/div/div[1]'))

    self.driver.find_element(By.ID, 'checkout').click()

    self.visibility_element_located((By.XPATH, '//*[@id="checkout_info_container"]/div/form/div[1]'))

    self.driver.find_element(By.ID, 'first-name').send_keys(global_constants.USER_NAME)
    self.driver.find_element(By.ID, 'last-name').send_keys('')
    self.driver.find_element(By.ID, 'continue').click()
    error_message = self.driver.find_element(By.XPATH, '//*[@id="checkout_info_container"]/div/form/div[1]/div[4]/h3')

    self.driver.save_screenshot(filename=f'emty-last-name.png')
    assert error_message.text == 'Error: Last Name is required'
  
  